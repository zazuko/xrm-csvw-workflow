@base <http://example.org/pipeline/>.
@prefix p: <https://pipeline.described.at/>.
@prefix code: <https://code.described.at/>.
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>.

<defaultVars>
  p:variable [ a p:Variable;
    p:name "SSH_HOST";
    p:value "localhost"
  ], [ a p:Variable;
    p:name "SSH_PORT";
    p:value "8022"
  ], [ a p:Variable;
    p:name "SSH_USER";
    p:value "anonymous"
  ], [ a p:Variable;
    p:name "SSH_PRIVATE_KEY";
    p:value ""
  ], [ a p:Variable;
    p:name "outputFolder";
    p:value "input"
  ], [ a p:Variable;
    p:name "sourceFolder";
    p:value "upload"
  ].

#
# fetch
#
<fetch> a p:Pipeline, p:ReadableObjectMode;
  p:variables <defaultVars>;
  p:steps [
    p:stepList (
      <listFiles>
      <forEachFile>
    )
  ].

<listFiles> a p:Step;
  code:implementedBy [ a code:EcmaScriptModule;
    code:link <node:barnard59-ftp/list.js#default>
  ];
  code:arguments [
    code:name "protocol";
    code:value "sftp"
  ], [
    code:name "user";
    code:value "SSH_USER"^^p:VariableName
  ], [
    code:name "host";
    code:value "SSH_HOST"^^p:VariableName
  ], [
    code:name "port";
    code:value "SSH_PORT"^^p:VariableName
  ], [
    code:name "pathname";
    code:value "sourceFolder"^^p:VariableName
  ], [
    code:name "privateKey";
    code:value "SSH_PRIVATE_KEY"^^p:VariableName
  ].

<forEachFile> a p:Step;
  code:implementedBy [ a code:EcmaScriptModule;
    code:link <node:barnard59-base/forEach.js#default>
  ];
  code:arguments (<fetchFile> "filename").

<fetchFile> a p:Pipeline;
  p:steps [
    p:stepList (
      <readFile>
      <writeFile>
    )
  ].

<readFile> a p:Step;
  code:implementedBy [ a code:EcmaScriptModule;
    code:link <node:barnard59-ftp/read.js#default>
  ];
  code:arguments [
    code:name "protocol";
    code:value "sftp"
  ], [
    code:name "user";
    code:value "SSH_USER"^^p:VariableName
  ], [
    code:name "host";
    code:value "SSH_HOST"^^p:VariableName
  ], [
    code:name "port";
    code:value "SSH_PORT"^^p:VariableName
  ], [
    code:name "filename";
    code:value "filename"^^p:VariableName
  ], [
    code:name "privateKey";
    code:value "SSH_PRIVATE_KEY"^^p:VariableName
  ].

<writeFile> a p:Step;
  code:implementedBy [ a code:EcmaScriptModule;
    code:link <node:fs#createWriteStream>
  ];
  code:arguments ("${outputFolder}/${filename.split('/').slice(-1)[0]}"^^code:EcmaScriptTemplateLiteral).
